{"version":3,"sources":["redux/actionTypes.jsx","redux/actions.jsx","components/ToDo.jsx","components/colors.js","components/ColorPicker.jsx","components/List.jsx","components/App.js","redux/reducer.jsx","redux/store.jsx","index.js"],"names":["ADD_TODO","DELETE_TODO","ON_COMPLETED","SET_description","CHANGE_TITLE","count","onCompleted","id","type","connect","state","props","find","prop","todo","completed","color","title","description","style","backgroundColor","className","concat","placeholder","value","onChange","event","str","target","temp","charAt","toUpperCase","slice","dispatch","changeTitle","setDescription","alt","width","onClick","deleteTodo","colors","ColorPicker","handleChange","triangle","React","useState","parseInt","Math","random","length","selectedColor","setSelectedColor","hex","map","App","initialState","JSON","parse","localStorage","getItem","reducer","action","filter","itm","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f73cf42.chunk.js","sourcesContent":["export const ADD_TODO=\"ADD_TODO\";\nexport const DELETE_TODO=\"DELETE_TODO\";\nexport const ON_COMPLETED=\"ON_COMPLETED\";\nexport const SET_description=\"SET_description\";\nexport const CHANGE_TITLE=\"CHANGE_TITLE\";","import { ADD_TODO, CHANGE_TITLE, DELETE_TODO, ON_COMPLETED, SET_description } from \"./actionTypes\";\n\nlet count=0;\n\nexport function addTodo(title,description,color){\n    return {\n    type:ADD_TODO,\n    id:++count,\n    title,\n    description,\n    color,\n    completed:false,\n};\n};\n\n\nexport const deleteTodo=(id)=>({\n    type:DELETE_TODO,\n    id\n});\n\nexport const onCompleted=(id)=>({\n    type:ON_COMPLETED,\n    id\n});\n\nexport const changeTitle=(id,title)=>({\n    type:CHANGE_TITLE,\n    id,\n    title\n});\n\nexport const setDescription=(id,description)=>({\n    type:SET_description,\n    id,\n    description\n});","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  changeTitle,\r\n  deleteTodo,\r\n  setDescription,\r\n  onCompleted,\r\n} from \"../redux/actions\";\r\nimport \"./styles.css\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport HighlightOffTwoToneIcon from \"@material-ui/icons/HighlightOffTwoTone\";\r\nimport CheckCircleTwoToneIcon from '@material-ui/icons/CheckCircleTwoTone';\r\nfunction ToDo(props) {\r\n\r\n\r\n  const { id, completed, color, title, description } = props.state.find(\r\n    (prop) => prop.id === props.todo.id\r\n  );\r\n\r\n  const style = {\r\n    backgroundColor: color,\r\n  };\r\n\r\n  return (\r\n    <div className={\"To-Do \" + color + (completed ? \" del\" : \"\")} style={style}>\r\n      <input\r\n        className={\"title \".concat(completed ? \"done\" : \"\")}\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(event) => {\r\n          const str = event.target.value;\r\n          const temp = str.charAt(0).toUpperCase() + str.slice(1);\r\n          props.dispatch(changeTitle(id, temp));\r\n        }}\r\n      ></input>\r\n      <textarea\r\n        className={\"description \".concat(completed ? \"done\" : \"\")}\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={(event) =>\r\n          props.dispatch(setDescription(id, event.target.value))\r\n        }\r\n      ></textarea>\r\n      <br />\r\n      <div className=\"right\">\r\n        <DeleteTwoToneIcon\r\n          className=\"remove\"\r\n          alt=\"Remove\"\r\n          width=\"20px\"\r\n          title=\"Delete TO-DO\"\r\n          onClick={() => {\r\n            props.dispatch(deleteTodo(id));\r\n          }}\r\n        />\r\n        {completed ? (\r\n          <HighlightOffTwoToneIcon\r\n            className=\"completed\"\r\n            alt={completed ? \"Mark Not Done\" : \"Mark Done\"}\r\n            width=\"20px\"\r\n            title={completed ? \"Mark Not Done\" : \"Mark Done\"}\r\n            onClick={() => props.dispatch(onCompleted(id))}\r\n          />\r\n        ) : (\r\n          <CheckCircleTwoToneIcon\r\n            className=\"completed\"\r\n            alt={completed ? \"Mark Not Done\" : \"Mark Done\"}\r\n            width=\"20px\"\r\n            title={completed ? \"Mark Not Done\" : \"Mark Done\"}\r\n            onClick={() => props.dispatch(onCompleted(id))}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapPropsToState(state) {\r\n  return {\r\n    state,\r\n  };\r\n}\r\n\r\nexport default connect(mapPropsToState)(ToDo);\r\n","const colors = [\r\n  \"#ff5398\",\r\n  \"#ffb14a\",\r\n  \"#7afcff\",\r\n  \"#ff7eb9\",\r\n  \"#fff200\",\r\n  \"#00D084\"\r\n];\r\n\r\nexport default colors;\r\n","import React from \"react\";\r\nimport { GithubPicker } from \"react-color\";\r\nimport colors from \"./colors.js\";\r\n\r\nexport default function ColorPicker(props) {\r\n  return (\r\n    <GithubPicker\r\n      width={\"76px\"}\r\n      onChange={props.handleChange}\r\n      triangle=\"hide\"\r\n      colors={colors}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport ToDo from \"./ToDo\";\r\nimport ColorPicker from \"./ColorPicker.jsx\";\r\nimport colors from \"./colors.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../redux/actions\";\r\n\r\n\r\nfunction List(props) {\r\n  const [selectedColor, setSelectedColor] = React.useState(\r\n    colors[parseInt(Math.random() * colors.length, 10)]\r\n  );\r\n\r\n\r\n  const handleChange = (color, event) => {\r\n    setSelectedColor(color.hex);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"selection_box\">\r\n        <ColorPicker className=\"color_picker\" handleChange={handleChange} />\r\n        <div className=\"addToDo\" onClick={() => props.dispatch(addTodo(\"\",\"\",selectedColor))}>\r\n          + ADD TO-DO\r\n        </div>\r\n      </div>\r\n      <div className=\"list\">\r\n        {props.state.length !== 0\r\n          ? props.state.map((todo) => (\r\n              <ToDo todo={todo} />\r\n            ))\r\n          : \"No Tasks Left\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction mapPropsToSTate(state) {\r\n  return{\r\n    state\r\n  }  \r\n}\r\n\r\n\r\nexport default connect(mapPropsToSTate)(List);","import React from 'react'\nimport List from './List'\n\nexport default function App() {\n    return (\n            <List/>\n    )\n}\n","import { ADD_TODO, CHANGE_TITLE, DELETE_TODO, ON_COMPLETED, SET_description } from \"./actionTypes\";\n\nconst initialState=JSON.parse(localStorage.getItem(\"state\")) || [];\n\nlet count = 0;\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, {\n        id: ++count,\n        title: action.title,\n        description: action.description,\n        color: action.color,\n        completed: action.completed\n      }];\n    case DELETE_TODO:\n      return state.filter((todo) => todo.id !== action.id);\n    case SET_description:\n      return state.map(itm=>itm.id===action.id?{...itm,description:action.description}:itm);\n    case ON_COMPLETED:\n      return state.map(itm=>itm.id===action.id?{...itm,completed:!itm.completed}:itm);\n    case CHANGE_TITLE:\n      return state.map(itm=>itm.id===action.id?{...itm,title:action.title}:itm);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import {createStore} from \"redux\";\nimport reducer from \"./reducer\";\n\nconst store=createStore(reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );    \n\nexport default store;\n\nstore.subscribe(()=>{\n    localStorage.setItem(\"state\",JSON.stringify(store.getState()));\n});\n\nexport const mapPropsToState=(state)=>({\n    state\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}